@use "sass:map";
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$it-store-client-primary: mat.define-palette(mat.$indigo-palette);
$it-store-client-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$it-store-client-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$it-store-client-theme: mat.define-light-theme((
  color: (
    primary: $it-store-client-primary,
    accent: $it-store-client-accent,
    warn: $it-store-client-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($it-store-client-theme);


@mixin theme-color-grabber($theme) {
  // Parse the theme and create variables for each color in the pallete
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  // Create theme specfic styles
  .primaryColorBG {
    background-color: mat-color($primary);
  }
  .accentColorBG {
    background-color: mat-color($accent);
  }
  .warnColorBG {
    background-color: mat-color($warn);
  }
}

/* You can add global styles to this file, and also import other style files */

@import './app/styles/variables';
@import './app/styles/mixins';
@import './app/styles/grid';
@import './app/styles/spacing';

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

ul, li {
  list-style: none
}

 // container
 .container {
   @include make-container();
}

.justify-content-center {
  justify-content: center;
}

.align-items-center {
  align-items: center;
}

.spacer {
  flex: 1 1 auto;
}

$color-config: mat.get-color-config($it-store-client-theme);

$colors: (
  primary: map.get($color-config, 'primary'),
  accent: map.get($color-config, 'accent'),
  warn: map.get($color-config, 'warn')
);


@each $name, $val in $colors {
  .text-#{$name} {
    color: mat.get-color-from-palette($val, 700);
  }
}